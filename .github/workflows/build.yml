name: Build

on:
  workflow_dispatch:

run-name: Build

jobs:
  rootfs:
    runs-on: ubuntu-latest
    name: Build rootfs 
    strategy:
      matrix:
        flavor: [desktop, server]
        suite: [noble]
    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout LFS
        run: git lfs fetch && git lfs checkout

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get purge needrestart -y && sudo apt-get upgrade -y

          # detect and install correct distutils version
          PY3_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
          DISTUTILS_PKG="python${PY3_VERSION}-distutils"

          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
            qemu-user-static qemu-system-arm qemu-efi-aarch64 u-boot-tools binfmt-support \
            debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
            udev dosfstools uuid-runtime git-lfs device-tree-compiler python3 \
            python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
            python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools

          sudo apt-get install -y "${DISTUTILS_PKG}" || sudo apt-get install -y $(apt-cache search ^python3.*-distutils$ | head -n1 | cut -d' ' -f1)

      - name: Build
        run: sudo ./build.sh --suite=${{ matrix.suite }} --flavor=${{ matrix.flavor }} --rootfs-only

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-${{ matrix.suite == 'jammy' && '22.04' || matrix.suite == 'noble' && '24.04' }}-preinstalled-${{ matrix.flavor }}-arm64-rootfs
          path: ./build/ubuntu-${{ matrix.suite == 'jammy' && '22.04' || matrix.suite == 'noble' && '24.04' }}-preinstalled-${{ matrix.flavor }}-arm64.rootfs.tar.xz
          if-no-files-found: error

  kernel:
    runs-on: ubuntu-latest
    name: Build kernel 
    strategy:
      matrix:
        suite: [noble]
    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout LFS
        run: git lfs fetch && git lfs checkout

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get purge needrestart -y && sudo apt-get upgrade -y

          # detect and install correct distutils version
          PY3_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
          DISTUTILS_PKG="python${PY3_VERSION}-distutils"

          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
            qemu-user-static qemu-system-arm qemu-efi-aarch64 u-boot-tools binfmt-support \
            debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
            udev dosfstools uuid-runtime git-lfs device-tree-compiler python3 \
            python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
            python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools

          sudo apt-get install -y "${DISTUTILS_PKG}" || sudo apt-get install -y $(apt-cache search ^python3.*-distutils$ | head -n1 | cut -d' ' -f1)


      - name: Build
        run: sudo ./build.sh --suite=${{ matrix.suite }} --kernel-only

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: linux-rockchip-${{ matrix.suite == 'jammy' && '5.10' || matrix.suite == 'noble' && '6.1' }}
          path: ./build/linux-*.deb
          if-no-files-found: error

  build:
    runs-on: ubuntu-latest
    name: Build image
    needs: [rootfs, kernel]
    strategy:
      matrix:
        board: [rock-5c]
        flavor: [desktop, server]
        suite: [noble]
    steps:
      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout LFS
        run: git lfs fetch && git lfs checkout

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get purge needrestart -y && sudo apt-get upgrade -y

          # detect and install correct distutils version
          PY3_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
          DISTUTILS_PKG="python${PY3_VERSION}-distutils"

          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
            qemu-user-static qemu-system-arm qemu-efi-aarch64 u-boot-tools binfmt-support \
            debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
            udev dosfstools uuid-runtime git-lfs device-tree-compiler python3 \
            python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
            python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools

          sudo apt-get install -y "${DISTUTILS_PKG}" || sudo apt-get install -y $(apt-cache search ^python3.*-distutils$ | head -n1 | cut -d' ' -f1)

      - name: Checkout rootfs
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-${{ matrix.suite == 'jammy' && '22.04' || matrix.suite == 'noble' && '24.04' }}-preinstalled-${{ matrix.flavor }}-arm64-rootfs
          path: ./build/

      - name: Checkout kernel
        uses: actions/download-artifact@v4
        with:
          name: linux-rockchip-${{ matrix.suite == 'jammy' && '5.10' || matrix.suite == 'noble' && '6.1' }}
          path: ./build/

      - name: Build
        run: sudo ./build.sh --board=${{ matrix.board }} --suite=${{ matrix.suite }} --flavor=${{ matrix.flavor }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-${{ matrix.suite == 'jammy' && '22.04' || matrix.suite == 'noble' && '24.04' }}-preinstalled-${{ matrix.flavor }}-arm64-${{ matrix.board }}
          path: ./images/ubuntu-*-preinstalled-${{ matrix.flavor }}-arm64-${{ matrix.board }}.*
          if-no-files-found: error

      - name: Clean cache
        run: sync && sudo rm -rf ./images/ ./build/ && sync
